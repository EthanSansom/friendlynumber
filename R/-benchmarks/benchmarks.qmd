---
title: "{friendlynumber} benchmarks"
format: html
---

```{r}
#| label: setup
#| include: false

stopifnot(
  "{bench} package is required to run this script." = requireNamespace("bench", quietly = TRUE),
  "{english} package is required to run this script." = requireNamespace("english", quietly = TRUE),
  "{nombre} package is required to run this script." = requireNamespace("nombre", quietly = TRUE),
  "{devtools} package is required to run this script." = requireNamespace("devtools", quietly = TRUE)
)
devtools::load_all()

marks <- c("expression", "median", "itr/sec", "gc/sec", "mem_alloc", "n_gc")
```

## Between Packages

```{r}
#| label: between-package-scalars
#| echo: true

# Scalar (small number)
bench::mark(
  english = as.character(english::english(1)),
  nombre = as.character(nombre::nom_card(1)),
  integer_friendly = as.character(integer_friendly(1)),
  numeric_friendly = as.character(numeric_friendly(1))
)[marks]

# Scalar (large number)
bench::mark(
  english = as.character(english::english(1000000000)),
  nombre = as.character(nombre::nom_card(1000000000)),
  integer_friendly = as.character(integer_friendly(1000000000)),
  numeric_friendly = as.character(numeric_friendly(1000000000))
)[marks]

# Scalar (non-number)
bench::mark(
  english = as.character(english::english(NA_real_)),
  nombre = as.character(nombre::nom_card(NA_real_)),
  integer_friendly = as.character(integer_friendly(NA_real_)),
  numeric_friendly = as.character(numeric_friendly(NA_real_)),
  check = FALSE
)[marks]
```

```{r}
#| label: between-package-vectors
#| echo: true

# Medium
x <- 1:1000
bench::mark(
  english = as.character(english::english(x)),
  nombre = as.character(nombre::nom_card(x)),
  integer_friendly = as.character(integer_friendly(x)),
  numeric_friendly = as.character(numeric_friendly(x)),
  filter_gc = FALSE
)[marks]

# Long
x <- 1:100000
bench::mark(
  english = as.character(english::english(x)),
  nombre = as.character(nombre::nom_card(x)),
  integer_friendly = as.character(integer_friendly(x)),
  numeric_friendly = as.character(numeric_friendly(x)),
  filter_gc = FALSE
)[marks]
```
